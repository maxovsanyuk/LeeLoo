{"version":3,"sources":["Redux/actionsCreators.js","Redux/types.js","Components/Buttons/GoBackBtn.js","Components/UserAdditionalinfo.js","Components/UsersTable.js","Components/ERR404.js","Components/App.js","Redux/appReducer.js","Redux/rootreducer.js","serviceWorker.js","index.js","img/404.gif"],"names":["setOffset","payload","type","fetchData","a","token","url","fetch","method","headers","Accept","Authorization","res","json","BtnBox","styled","div","GoBackBtn","style","Button","className","variant","AddInfoCont","headerLables","UserAdditionalinfo","setIsAddInfo","addUserData","user","onClick","TableContainer","component","Paper","e","stopPropagation","Table","aria-label","TableHead","TableRow","map","i","TableCell","key","align","TableBody","included","orders","rowItems","id","price","currency","title","status","hover","cursor","item","length","Alert","severity","moment","require","ColorLinearProgress","withStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","WrapperComp","UsersTable","dispatch","useDispatch","useState","isAddInfo","userToShowAddInfo","setUserToShowAddInfo","state","useSelector","app","usersData","limit","isloading","offset","offsetLimit","useParams","page","routerPage","useEffect","generalUsersData","Promise","all","data","u","fullUsersData","console","warn","fetchListOfUsers","Math","abs","parseInt","isEmpty","range","Skeleton","animation","height","name","from","createdAt","format","document","body","overflow","handleAddInfo","textDecoration","to","target","Pagination","count","onChange","value","Component404","svg404","ERR404","App","exact","path","render","initState","isAlert","rootReduser","combineReducers","action","Boolean","window","location","hostname","match","store","createStore","compose","applyMiddleware","logger","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.019fde7d.chunk.js","sourcesContent":["import {\n  LOAD_USERS_DATA,\n  HIDE_ALERT,\n  HIDE_LOADER,\n  SHOW_ALERT,\n  SHOW_LOADER,\n  SET_OFFSET,\n} from \"./types\";\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER,\n  };\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER,\n  };\n}\n\nexport function showAlert() {\n  return {\n    type: SHOW_ALERT,\n  };\n}\n\nexport function hideAlert() {\n  return {\n    type: HIDE_ALERT,\n  };\n}\n\nexport function setOffset(payload) {\n  return {\n    type: SET_OFFSET,\n    payload,\n  };\n}\n\nasync function fetchData({ token, url }) {\n  const res = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n      \"X-Leeloo-AuthToken\": token,\n    },\n  });\n\n  return await res.json();\n}\n\nexport function fetchListOfUsers({ limit, offset, token }) {\n  return async (dispatch) => {\n    try {\n      dispatch(showLoader());\n      const generalUsersData = await fetchData({\n        token,\n        url: `https://api.leeloo.ai/api/v1/accounts?limit=${limit}&offset=${offset}`,\n      });\n\n      const fullUsersData = await Promise.all(\n        generalUsersData.data.map(async (u) => {\n          return {\n            ...u,\n            addUserData: await fetchData({\n              token,\n              url: `https://api.leeloo.ai/api/v1/accounts/${u.id}?include=contactedUsers,orders&limit=${limit}&offset=${offset}`,\n            }),\n          };\n        })\n      );\n\n      dispatch({\n        type: LOAD_USERS_DATA,\n        payload: fullUsersData,\n      });\n      dispatch(hideLoader());\n    } catch (e) {\n      console.warn(e);\n      // dispatch(showAlert())\n    }\n  };\n}\n","export const LOAD_USERS_DATA = \"APP/LOAD_USERS_DATA\";\n\nexport const SHOW_LOADER = \"APP/SHOW_LOADER\";\nexport const HIDE_LOADER = \"APP/HIDE_LOADER\";\n\nexport const SHOW_ALERT = \"APP/SHOW_ALERT\";\nexport const HIDE_ALERT = \"APP/HIDE_ALERT\";\n\nexport const SET_OFFSET = \"APP/SET_OFFSET\";\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst BtnBox = styled.div`\n  .go-back-btn {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    background: #5e9ab4;\n    color: aliceblue;\n    font-weight: 600;\n    &:hover {\n      color: #5e9ab4;\n      background: #d5d5d5;\n    }\n  }\n`;\n\nconst GoBackBtn = ({ style }) => {\n  return (\n    <BtnBox>\n      <Button className=\"go-back-btn\" style={style} variant=\"contained\">\n        Go back\n      </Button>\n    </BtnBox>\n  );\n};\n\nexport default GoBackBtn;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// MATERIAL_UI\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n// LODASH\n\nimport GoBackBtn from \"./Buttons/GoBackBtn\";\n\nconst AddInfoCont = styled.div`\n  display: flex;\n  position: fixed;\n  background: rgba(110, 114, 114, 0.9);\n  z-index: 10;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n\n  .table-cont {\n    position: absolute;\n    width: 90%;\n    margin: 15% 5% 5% 5%;\n  }\n\n  .err-alert {\n    height: max-content;\n    position: relative;\n    top: 20px;\n    left: 65px;\n  }\n\n  .table-row {\n    border-bottom: 2px solid #999;\n  }\n  .table-cell {\n    font-size: 18px;\n  }\n`;\n\nconst headerLables = [\n  \"Order Id\",\n  \"Price\",\n  \"Currency\",\n  \"Payment method\",\n  \"Status\",\n];\n\nconst UserAdditionalinfo = ({ setIsAddInfo, user }) => {\n  const { addUserData } = user;\n\n  return (\n    <AddInfoCont onClick={() => setIsAddInfo(false)}>\n      <GoBackBtn />\n      <TableContainer\n        className=\"table-cont\"\n        component={Paper}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow className=\"table-row\">\n              {headerLables.map((i) => {\n                return (\n                  <TableCell key={i} align=\"center\">\n                    {i}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {addUserData?.included?.orders.map((user) => {\n              const { id, price, currency, title, status } = user;\n              const rowItems = [id, price, currency, title, status];\n\n              return (\n                <TableRow key={user.id} hover style={{ cursor: \"pointer\" }}>\n                  {rowItems.map((item) => {\n                    return (\n                      <TableCell\n                        className=\"table-cell\"\n                        key={item}\n                        align=\"center\"\n                      >\n                        {item}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {!addUserData.included.orders.length && (\n        <Alert className=\"err-alert\" severity=\"error\">\n          User has no orders\n        </Alert>\n      )}\n    </AddInfoCont>\n  );\n};\n\nexport default UserAdditionalinfo;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchListOfUsers, setOffset } from \"../Redux/actionsCreators\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\n\n// MATERIAL_UI\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Button from \"@material-ui/core/Button\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// LODASH\nimport isEmpty from \"lodash/isEmpty\";\nimport range from \"lodash/range\";\nimport { Link } from \"react-router-dom\";\nimport UserAdditionalinfo from \"./UserAdditionalinfo\";\n\nvar moment = require(\"moment\");\n\nconst ColorLinearProgress = withStyles({\n  colorPrimary: {\n    backgroundColor: \"#b2dfdb\",\n  },\n  barColorPrimary: {\n    backgroundColor: \"#00695c\",\n  },\n})(LinearProgress);\n\nconst WrapperComp = styled.div`\n  width: 90%;\n  position: relative;\n  margin: 100px auto;\n  opacity: 0.85;\n\n  .table-row {\n    border-bottom: 2px solid #999;\n  }\n\n  .table-cell {\n    font-size: 18px;\n  }\n\n  .add-info-btn {\n    background: #5e9ab4;\n    color: aliceblue;\n  }\n\n  .linear-progress {\n    width: 100%;\n    position: absolute;\n    bottom: 60px;\n    z-index: 1;\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: center;\n    margin: 30px auto;\n    width: 50%;\n  }\n`;\n\nconst headerLables = [\n  \"#\",\n  \"Name\",\n  \"Messenger\",\n  \"Time of last message\",\n  \"Additional information\",\n];\n\nconst UsersTable = () => {\n  const dispatch = useDispatch();\n  const [isAddInfo, setIsAddInfo] = useState(false);\n  const [userToShowAddInfo, setUserToShowAddInfo] = useState(false);\n  const state = useSelector((state) => state.app);\n  const { usersData, limit, token, isloading, offset, offsetLimit } = state;\n  const { page: routerPage = 1 } = useParams();\n\n  const handleChangeOffset = (e, value) => {\n    dispatch(setOffset(Math.abs(value)));\n  };\n\n  const handleAddInfo = (user) => {\n    setUserToShowAddInfo(user);\n    setIsAddInfo(!isAddInfo);\n    document.body.style.overflow = \"hidden\";\n  };\n\n  useEffect(() => {\n    dispatch(\n      fetchListOfUsers({\n        limit,\n        offset,\n        token,\n      })\n    );\n  }, [offset]);\n\n  useEffect(() => {\n    dispatch(setOffset(Math.abs(parseInt(routerPage))));\n  }, [routerPage]);\n\n  return (\n    <WrapperComp>\n      {isAddInfo && (\n        <UserAdditionalinfo\n          user={userToShowAddInfo}\n          setIsAddInfo={setIsAddInfo}\n        />\n      )}\n\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow className=\"table-row\">\n              {headerLables.map((i) => {\n                return (\n                  <TableCell key={i} align=\"center\" className=\"table-cell\">\n                    {i}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {!isEmpty(usersData)\n              ? usersData.map((user, i) => (\n                  <TableRow key={user.id} hover style={{ cursor: \"pointer\" }}>\n                    <TableCell align=\"center\">{i + 1}</TableCell>\n                    <TableCell align=\"center\">{user.name}</TableCell>\n                    <TableCell align=\"center\">{user.from}</TableCell>\n                    <TableCell align=\"center\">\n                      {moment(user.createdAt).format(\"MMMM Do YYYY, h:mm:ss a\")}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Button\n                        variant=\"contained\"\n                        className=\"add-info-btn\"\n                        onClick={() => handleAddInfo(user)}\n                      >\n                        Get additional information\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))\n              : range(1, limit + 1, 1).map((i) => {\n                  return (\n                    <TableRow key={i}>\n                      {range(1, 6, 1).map((i) => {\n                        return (\n                          <TableCell key={i}>\n                            <Skeleton animation=\"wave\" height={36} />\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n          </TableBody>\n        </Table>\n\n        {isloading && <ColorLinearProgress className=\"linear-progress \" />}\n\n        {!isloading && usersData && isEmpty(usersData) && (\n          <Alert severity=\"error\">No users datas, comming soon</Alert>\n        )}\n      </TableContainer>\n\n      <Link style={{ textDecoration: \"none\" }} to={`/page/${offset}`} target>\n        <Pagination\n          className=\"pagination\"\n          count={offset > offsetLimit ? routerPage : offsetLimit}\n          page={offset}\n          onChange={handleChangeOffset}\n        />\n      </Link>\n    </WrapperComp>\n  );\n};\n\nexport default UsersTable;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport svg404 from \"../img/404.gif\";\nimport GoBackBtn from \"./Buttons/GoBackBtn\";\n\nconst Component404 = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100%;\n  background: #fff url(${svg404}) no-repeat center;\n  background-size: 40%;\n\n  .go-back-btn {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    background: #5e9ab4;\n    color: aliceblue;\n    font-weight: 600;\n    &:hover {\n      color: #5e9ab4;\n    }\n  }\n`;\n\nconst ERR404 = () => {\n  return (\n    <Component404>\n      <Link to=\"/\">\n        <GoBackBtn />\n      </Link>\n    </Component404>\n  );\n};\n\nexport default ERR404;\n","import React from \"react\";\nimport UsersTable from \"./UsersTable\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ERR404 from \"./ERR404\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/LeeLoo\" component={UsersTable} />\n        <Route exact path=\"LeeLoo/page/:page\" component={UsersTable} />\n        <Route\n          render={() => {\n            return <ERR404 />;\n          }}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import {\n  SHOW_LOADER,\n  HIDE_LOADER,\n  SHOW_ALERT,\n  HIDE_ALERT,\n  LOAD_USERS_DATA,\n  SET_OFFSET,\n} from \"./types\";\n\nconst initState = {\n  isloading: false,\n  isAlert: false,\n  token:\n    \"cmpc3hcajyh3e5ksz6xho9t77flp4pesa300js9y8w9v6xptzj0vlk0halesk27hgqslukjxpepzkmaz6jpfj8zw0x5fwsajezvb\",\n  limit: 10,\n  offset: 1,\n  offsetLimit: 100,\n};\n\nexport const appReducer = (state = initState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SHOW_LOADER:\n      return { ...state, isloading: true };\n\n    case HIDE_LOADER:\n      return { ...state, isloading: false };\n\n    case SHOW_ALERT:\n      return { ...state, isAlert: true };\n\n    case HIDE_ALERT:\n      return { ...state, isAlert: null };\n\n    case LOAD_USERS_DATA:\n      return { ...state, isAlert: null, usersData: payload };\n\n    case SET_OFFSET:\n      return { ...state, offset: payload };\n\n    default:\n      return { ...state };\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { appReducer } from \"./appReducer\";\n\nexport const rootReduser = combineReducers({\n  app: appReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReduser } from \"./Redux/rootreducer\";\nimport logger from \"redux-logger\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(\n  rootReduser,\n  compose(\n    applyMiddleware(logger, thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/404.ba9f1973.gif\";"],"sourceRoot":""}